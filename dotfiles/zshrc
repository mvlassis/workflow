#
# ~/.zshrc
#

bindkey -M emacs '^P' up-line-or-history
bindkey -M emacs '^N' down-line-or-history
bindkey "^[[3~" delete-char
unsetopt beep
HISTFILE="${HOME}/.histfile"
HISTSIZE=100
SAVEHIST=500
#unsetopt prompt_cr prompt_sp


# Exports
# Append .bin to path
export PATH="$HOME/.bin:$HOME/.local/bin:$PATH"
export EDITOR="emacsclient -t"
export SPOTIPY_CLIENT_ID=2c3af1c2720d48449c8134e5d86078e9
export SPOTIPY_CLIENT_SECRET=c96d4cf1ee5e42debb6bf39f38b25185

# Aliases
# Easier Navigation
alias d="cd ~/Documents"
alias dl="cd ~/Downloads"
alias gt="cd ~/Documents/Github"
alias cf="cd ~/.config"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

# Shortcuts
# Finds unused packages (orhans) and removes them
alias clean='pacman -Qtdq | sudo pacman -Rns -'
alias sedit="SUDO_EDITOR=\"emacsclient\" sudo -e"
alias duck='ddgr -j'
alias te='emacsclient -t'
alias temacs='emacsclient -t'
alias emacs='emacscliententry'
alias restart-emacs='systemctl restart --user emacs.service'
alias open='xdg-open'
alias update='sudo pacman -Syu'
alias wiki='ddgr -j \!w'
alias yeet='sudo pacman -Rns'
alias mm='micromamba'

# ls shortcuts
alias ll='la -l'
alias ls='ls --color=auto'
alias la='ls -aA'

# Change the ssh to the appropriate kitten when using kitty
[ "$TERM" = "xterm-kitty" ] && alias ssh="kitty +kitten ssh"


## Prompt
setopt PROMPT_SUBST

rightprompt()
{
	printf "%*s" $COLUMNS "hello!"
}

precmd() {
	# Add a padlock next to the working directory if it is read-only
	padlock=""
	[[ -w "." ]] || padlock="[ï€£] "
	_lineup=$'\e[1A'
	_linedown=$'\e[1B'
	PS1=$'%B%F{green}%n%b%f at %B%F{red}%M%b%f: %B%F{cyan}${padlock}%~%b%f \n%# '
	RPS1='%{${_lineup}%}hello!%{${_linedown}%}'
}

# Files to source
# Simple function that sources a file only if it exists
check_source () {
	[[ -f "$1" ]] && source "$1"
}
# source /usr/share/zsh/plugins/zsh-autocomplete/zsh-autocomplete.plugin.zsh
# For Arch Linux
check_source "/usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
check_source "/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
# For Debian
check_source "/usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
check_source "/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

# >>> mamba initialize >>>
if [[ $HOSTNAME == "arch" ]]; then
	export MAMBA_EXE='/usr/bin/micromamba';
else
	export MAMBA_EXE="/home/manos/.local/bin/micromamba";
fi
export MAMBA_ROOT_PREFIX='/home/manos/.micromamba';
__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
fi
unset __mamba_setup
# <<< mamba initialize <<<
# micromamba activate base

# Add zoxide
eval "$(zoxide init zsh)"
