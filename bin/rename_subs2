#!/usr/bin/env ruby

require 'fileutils'
require 'optparse'

options = {sync: false}
option_parser = OptionParser.new do |opts|
  opts.banner "Usage: rename_subs [path]"

  
end

# Get the name of the series and the season
working_directory = ARGV[0] || Dir.pwd
parent_directory = File.dirname(working_directory)
show_name = File.basename(working_directory).split('Season')[0].strip
season_match = File.basename(working_directory).match(/Season\s*(\d+)/)
season_number = season_match ? season_match[1] : "0"

video_files = Dir.glob("*.{mkv,mp4}")
subtitle_files = Dir.glob("*.srt")

if video_files.empty?
  puts "Error: No video files found in the current directory."
  exit 1
end

video_count = video_files.size
subtitle_count = subtitle_files.size

if video_count != subtitle_count
  puts "Error: The number of video files (#{video_count}) and subtitle files (#{subtitle_count}) do not match."
  exit 2
end

# Create a subfolder for each episode
(1..video_count).each do |i|
  episode_string = format("E%02d", i)
  folder_name = format("#{show_name} #{season_number}x%02d", i)
  
  FileUtils.mkdir_p(folder_name)

  video_file = video_files.find { |file| file.match(/#{episode_string}/i) }
  subtitle_file = subtitle_files.find { |file| file.match(/#{episode_string}/i) }

  if video_file.nil? || subtitle_file.nil?
    puts "Error: Missing video or subtitle for episode #{episode_string}."
    next 
  end

  video_destination = File.join(folder_name, File.basename(video_file))
  FileUtils.mv(video_file, video_destination)
  
  new_subtitle_name = "#{File.basename(video_file, File.extname(video_file))}.srt"
  subtitle_destination = File.join(folder_name, new_subtitle_name)
  FileUtils.mv(subtitle_file, subtitle_destination)
end

